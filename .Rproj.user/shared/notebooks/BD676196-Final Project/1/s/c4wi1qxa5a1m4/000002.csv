"0","data <- raw"
"0",""
"0","data$player <- as.factor(data$player)"
"0",""
"0","data[""win""] <- ifelse(data[""points""] >= 10, 1, 0) # identify game winner"
"0",""
"0","data <- subset.data.frame(data, select = -c(me), drop = TRUE) # drop unnecessary fields"
"0",""
"0","# rename resource columns"
"0","data <- setnames(data, "
"0","         old = c(""X"", ""X.2"", ""X.4"", ""X.5"", ""X.7"", ""X.9""), "
"0","         new = c(""tile_res_1"", ""tile_res_2"", ""tile_res_3"", ""tile_res_4"", ""tile_res_5"", ""tile_res_6"")"
"0","         )"
"0",""
"0","# rename number columns"
"0","data <- setnames(data, "
"0","         old = c(""settlement1"", ""X.1"", ""X.3"", ""settlement2"", ""X.6"", ""X.8""), "
"0","         new = c(""tile_no_1"", ""tile_no_2"", ""tile_no_3"", ""tile_no_4"", ""tile_no_5"", ""tile_no_6"")"
"0","         )"
"0",""
"0","# look up initial tile probabilities"
"0","data <- probs_lookup(data, dprob,"
"0","                    c(""tile_no_1"", ""tile_no_2"", ""tile_no_3"", ""tile_no_4"", ""tile_no_5"", ""tile_no_6""))"
"0",""
"0","# calculate the diversity of numbers in the first 2 placements"
"0","data <- "
"0","  data %>% "
"0","  dplyr::rowwise() %>% "
"0","  dplyr::mutate("
"0","    tile_no_div ="
"0","      ifelse(0 %in% unique(c(tile_no_1, tile_no_2, tile_no_3,tile_no_4, tile_no_5, tile_no_6)),"
"0","             length(unique(c(tile_no_1, tile_no_2, tile_no_3,tile_no_4, tile_no_5, tile_no_6)))-1,"
"0","             length(unique(c(tile_no_1, tile_no_2, tile_no_3,tile_no_4, tile_no_5, tile_no_6)))"
"0","      )"
"0","    )"
"0",""
"0","# Calculate the probability of receiving a resource on a dice role"
"0","res_list <- c(""O"", ""W"", ""S"", ""C"", ""L"")"
"0","data[,res_list] <- 0"
"0",""
"0","for (row in seq(nrow(data))) {"
"0","  "
"0","  for (tile in seq(6)) {"
"0","    "
"0","    res_col <- paste(""tile_res_"", tile, sep = """")"
"0","    prob_col <- paste(""tile_prob_"", tile, sep = """")"
"0","    res <- as.character(data[row,res_col])"
"0","    prob <- as.numeric(data[row, prob_col])"
"0","    "
"0","    if (res %in% res_list) {"
"0","      data[row, res] <- data[row, res] + prob"
"0","    }"
"0","    "
"0","  }"
"0","  "
"0","}"
"0",""
"0","# Expected resource return per turn"
"0","data[""exp_res_gain""] <- rowSums(data[res_list])       "
"0",""
"0","# identify whether ports were selected in the first 2 placements"
"0","port_list <- c(""3G"", ""2O"", ""2W"", ""2S"", ""2C"", ""2L"")"
"0","data[,port_list] <- 0"
"0",""
"0","for (row in seq(nrow(data))) {"
"0","  "
"0","  for (tile in seq(6)) {"
"0","    "
"0","    port_col <- paste(""tile_res_"", tile, sep = """")"
"0","    port <- as.character(data[row,res_col])"
"0","    "
"0","    if (port %in% port_list) {"
"0","      data[row, port] <- 1"
"0","    }"
"0","    "
"0","  }"
"0","  "
"0","}"
"0",""
"0","# Diversity of ports"
"0","data[""port_div""] <- rowSums(data[c(""3G"", ""2S"", ""2W"", ""2C"", ""2L"")])"
"0","# Interaction terms between resource probability and port type"
"0","data[""res_port_alignment""] <- rowSums(data[port_list[port_list!=""3G""]]*data[res_list])"
"0","# General port alignment is based on the probability of the most likely resource"
"0","data[""res_port_alignment""] <- data[""res_port_alignment""] + rowSums(data[""3G""]*rowMaxs(as.matrix(data[res_list])))"
"0",""
"0","# Gain and loss stats"
"0","data[""prod_ratio""] <- data$production/data$totalGain        # ratio of total gain from production"
"0","data[""trade_ratio""] <- data$tradeGain/data$totalGain        # ratio of t, otal gain from trade"
"0","data[""trade_return""] <- data$tradeGain/data$tradeLoss       # ratio of gain:loss through trade"
"0","data[""tribute_loss_ratio""] <- data$tribute/data$totalGain   # portion of gain lost to poor resource management"
"0",""
"0","attach(data)"
"0",""
